{"ast":null,"code":"import axios from 'axios';\n\n// Use environment variable or fallback to hardcoded URL if not available\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconsole.log('API URL being used:', API_URL); // Debug log\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 60000 // Set a global timeout of 60 seconds\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log('Making request to:', config.url);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log('Received response from:', response.config.url);\n  return response;\n}, error => {\n  var _error$config, _error$response, _error$response2;\n  console.error('Response error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: error.message,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n  });\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  logout: () => api.post('/auth/logout'),\n  getMe: () => api.get('/auth/me'),\n  updateWallet: walletAddress => api.put('/auth/wallet', {\n    walletAddress\n  })\n};\n\n// Document API\nexport const documentAPI = {\n  createDocument: documentData => api.post('/documents', documentData),\n  getUserDocuments: () => api.get('/documents/user'),\n  getDocument: id => api.get(`/documents/${id}`),\n  updateDocument: (id, documentData) => api.put(`/documents/${id}`, documentData),\n  updateDocumentBlockchain: (id, blockchainData) => api.put(`/documents/${id}/blockchain`, blockchainData),\n  deleteDocument: id => api.delete(`/documents/${id}`)\n};\n\n// DAO API\nexport const daoAPI = {\n  createDAO: daoData => api.post('/daos', daoData),\n  getUserDAOs: () => api.get('/daos/user/me'),\n  getDAO: id => api.get(`/daos/${id}`),\n  updateDAO: (id, daoData) => api.put(`/daos/${id}`, daoData),\n  updateDAOBlockchain: (id, blockchainData) => api.put(`/daos/${id}/blockchain`, blockchainData),\n  deleteDAO: id => api.delete(`/daos/${id}`)\n};\n\n// AI API\nexport const aiAPI = {\n  generateDocument: async (documentType, parameters) => {\n    try {\n      console.log('Sending document generation request:', {\n        documentType,\n        parameters\n      });\n      const response = await api.post('/ai/generate-document', {\n        documentType,\n        parameters\n      });\n      console.log('Document generation response:', response);\n      if (!response.data) {\n        throw new Error('No data received in response');\n      }\n      return response;\n    } catch (error) {\n      console.error('Error in document generation API call:', {\n        message: error.message,\n        response: error.response,\n        config: error.config\n      });\n      throw error;\n    }\n  },\n  reviewContract: async contractText => {\n    try {\n      console.log('Sending contract review request, text length:', contractText.length);\n      const response = await api.post('/ai/review-contract', {\n        contractText\n      });\n      console.log('Contract review response:', response);\n      if (!response.data) {\n        throw new Error('No data received in response');\n      }\n      return response;\n    } catch (error) {\n      console.error('Error in contract review API call:', {\n        message: error.message,\n        response: error.response,\n        config: error.config\n      });\n      throw error;\n    }\n  },\n  reviewContractImage: async base64Image => {\n    try {\n      console.log('Sending contract image review request');\n\n      // Use a different instance with multipart/form-data for image upload\n      const response = await axios({\n        method: 'post',\n        url: `${API_URL}/ai/review-contract-image`,\n        data: {\n          image: base64Image\n        },\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true,\n        timeout: 60000 // Increase timeout to 60 seconds for image processing\n      });\n      console.log('Contract image review response:', response);\n      if (!response.data) {\n        throw new Error('No data received in response');\n      }\n      return response;\n    } catch (error) {\n      console.error('Error in contract image review API call:', {\n        message: error.message,\n        response: error.response,\n        config: error.config\n      });\n      throw error;\n    }\n  },\n  chat: async (message, conversation) => {\n    try {\n      console.log('Sending chat request:', {\n        message,\n        conversationLength: conversation.length\n      });\n      const response = await api.post('/ai/chat', {\n        message,\n        conversation: conversation.map(msg => ({\n          role: msg.role,\n          content: msg.content\n        }))\n      });\n      console.log('Chat response received:', {\n        status: response.status,\n        hasData: !!response.data,\n        dataKeys: response.data ? Object.keys(response.data) : []\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      console.error('Error in chat API call:', {\n        message: error.message,\n        response: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n      });\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","console","log","api","create","baseURL","withCredentials","headers","timeout","interceptors","request","use","config","url","error","Promise","reject","response","_error$config","_error$response","_error$response2","status","message","data","authAPI","register","userData","post","login","credentials","logout","getMe","get","updateWallet","walletAddress","put","documentAPI","createDocument","documentData","getUserDocuments","getDocument","id","updateDocument","updateDocumentBlockchain","blockchainData","deleteDocument","delete","daoAPI","createDAO","daoData","getUserDAOs","getDAO","updateDAO","updateDAOBlockchain","deleteDAO","aiAPI","generateDocument","documentType","parameters","Error","reviewContract","contractText","length","reviewContractImage","base64Image","method","image","chat","conversation","conversationLength","map","msg","role","content","hasData","dataKeys","Object","keys","_error$response3"],"sources":["D:/CODES/legal/legal/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Use environment variable or fallback to hardcoded URL if not available\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconsole.log('API URL being used:', API_URL); // Debug log\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  withCredentials: true,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  timeout: 60000 // Set a global timeout of 60 seconds\r\n});\r\n\r\n// Add request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('Making request to:', config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Received response from:', response.config.url);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', {\r\n      url: error.config?.url,\r\n      status: error.response?.status,\r\n      message: error.message,\r\n      data: error.response?.data\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  logout: () => api.post('/auth/logout'),\r\n  getMe: () => api.get('/auth/me'),\r\n  updateWallet: (walletAddress) => api.put('/auth/wallet', { walletAddress })\r\n};\r\n\r\n// Document API\r\nexport const documentAPI = {\r\n  createDocument: (documentData) => api.post('/documents', documentData),\r\n  getUserDocuments: () => api.get('/documents/user'),\r\n  getDocument: (id) => api.get(`/documents/${id}`),\r\n  updateDocument: (id, documentData) => api.put(`/documents/${id}`, documentData),\r\n  updateDocumentBlockchain: (id, blockchainData) => api.put(`/documents/${id}/blockchain`, blockchainData),\r\n  deleteDocument: (id) => api.delete(`/documents/${id}`)\r\n};\r\n\r\n// DAO API\r\nexport const daoAPI = {\r\n  createDAO: (daoData) => api.post('/daos', daoData),\r\n  getUserDAOs: () => api.get('/daos/user/me'),\r\n  getDAO: (id) => api.get(`/daos/${id}`),\r\n  updateDAO: (id, daoData) => api.put(`/daos/${id}`, daoData),\r\n  updateDAOBlockchain: (id, blockchainData) => api.put(`/daos/${id}/blockchain`, blockchainData),\r\n  deleteDAO: (id) => api.delete(`/daos/${id}`)\r\n};\r\n\r\n// AI API\r\nexport const aiAPI = {\r\n  generateDocument: async (documentType, parameters) => {\r\n    try {\r\n      console.log('Sending document generation request:', { documentType, parameters });\r\n      \r\n      const response = await api.post('/ai/generate-document', { \r\n        documentType, \r\n        parameters \r\n      });\r\n      \r\n      console.log('Document generation response:', response);\r\n      \r\n      if (!response.data) {\r\n        throw new Error('No data received in response');\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in document generation API call:', {\r\n        message: error.message,\r\n        response: error.response,\r\n        config: error.config\r\n      });\r\n      throw error;\r\n    }\r\n  },\r\n  reviewContract: async (contractText) => {\r\n    try {\r\n      console.log('Sending contract review request, text length:', contractText.length);\r\n      \r\n      const response = await api.post('/ai/review-contract', { \r\n        contractText \r\n      });\r\n      \r\n      console.log('Contract review response:', response);\r\n      \r\n      if (!response.data) {\r\n        throw new Error('No data received in response');\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in contract review API call:', {\r\n        message: error.message,\r\n        response: error.response,\r\n        config: error.config\r\n      });\r\n      throw error;\r\n    }\r\n  },\r\n  reviewContractImage: async (base64Image) => {\r\n    try {\r\n      console.log('Sending contract image review request');\r\n      \r\n      // Use a different instance with multipart/form-data for image upload\r\n      const response = await axios({\r\n        method: 'post',\r\n        url: `${API_URL}/ai/review-contract-image`,\r\n        data: { image: base64Image },\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        withCredentials: true,\r\n        timeout: 60000, // Increase timeout to 60 seconds for image processing\r\n      });\r\n      \r\n      console.log('Contract image review response:', response);\r\n      \r\n      if (!response.data) {\r\n        throw new Error('No data received in response');\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in contract image review API call:', {\r\n        message: error.message,\r\n        response: error.response,\r\n        config: error.config\r\n      });\r\n      throw error;\r\n    }\r\n  },\r\n  chat: async (message, conversation) => {\r\n    try {\r\n      console.log('Sending chat request:', { message, conversationLength: conversation.length });\r\n      \r\n      const response = await api.post('/ai/chat', {\r\n        message,\r\n        conversation: conversation.map(msg => ({\r\n          role: msg.role,\r\n          content: msg.content\r\n        }))\r\n      });\r\n      \r\n      console.log('Chat response received:', {\r\n        status: response.status,\r\n        hasData: !!response.data,\r\n        dataKeys: response.data ? Object.keys(response.data) : []\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error in chat API call:', {\r\n        message: error.message,\r\n        response: error.response?.data\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}