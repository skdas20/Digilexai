{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODES\\\\legal\\\\legal\\\\frontend\\\\src\\\\components\\\\LoadingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingScreen = ({\n  onLoadingComplete\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  const videoRef = useRef(null);\n\n  // Check if device is mobile\n  useEffect(() => {\n    const checkIfMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    // Initial check\n    checkIfMobile();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', checkIfMobile);\n\n    // Cleanup\n    return () => window.removeEventListener('resize', checkIfMobile);\n  }, []);\n  const handleVideoEnded = () => {\n    setIsLoading(false);\n    if (onLoadingComplete) {\n      onLoadingComplete();\n    }\n  };\n\n  // If not loading, don't render anything\n  if (!isLoading) {\n    return null;\n  }\n  const videoSrc = isMobile ? '/assets/Load2.mp4' : '/assets/Load.mp4';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 bg-black flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"w-full h-full object-cover\",\n      src: videoSrc,\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      onEnded: handleVideoEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingScreen, \"naPDj2lsuDvAOd8RenlT6nriguM=\");\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","LoadingScreen","onLoadingComplete","_s","isLoading","setIsLoading","isMobile","setIsMobile","videoRef","checkIfMobile","window","innerWidth","addEventListener","removeEventListener","handleVideoEnded","videoSrc","className","children","ref","src","autoPlay","muted","playsInline","onEnded","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CODES/legal/legal/frontend/src/components/LoadingScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst LoadingScreen = ({ onLoadingComplete }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const videoRef = useRef(null);\r\n\r\n  // Check if device is mobile\r\n  useEffect(() => {\r\n    const checkIfMobile = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n\r\n    // Initial check\r\n    checkIfMobile();\r\n\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', checkIfMobile);\r\n\r\n    // Cleanup\r\n    return () => window.removeEventListener('resize', checkIfMobile);\r\n  }, []);\r\n\r\n  const handleVideoEnded = () => {\r\n    setIsLoading(false);\r\n    if (onLoadingComplete) {\r\n      onLoadingComplete();\r\n    }\r\n  };\r\n\r\n  // If not loading, don't render anything\r\n  if (!isLoading) {\r\n    return null;\r\n  }\r\n\r\n  const videoSrc = isMobile ? '/assets/Load2.mp4' : '/assets/Load.mp4';\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 bg-black flex items-center justify-center\">\r\n      <video\r\n        ref={videoRef}\r\n        className=\"w-full h-full object-cover\"\r\n        src={videoSrc}\r\n        autoPlay\r\n        muted\r\n        playsInline\r\n        onEnded={handleVideoEnded}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMY,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAGA,CAAA,KAAM;MAC1BF,WAAW,CAACG,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC;IACvC,CAAC;;IAED;IACAF,aAAa,CAAC,CAAC;;IAEf;IACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,aAAa,CAAC;;IAEhD;IACA,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,aAAa,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7BT,YAAY,CAAC,KAAK,CAAC;IACnB,IAAIH,iBAAiB,EAAE;MACrBA,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,IAAI,CAACE,SAAS,EAAE;IACd,OAAO,IAAI;EACb;EAEA,MAAMW,QAAQ,GAAGT,QAAQ,GAAG,mBAAmB,GAAG,kBAAkB;EAEpE,oBACEN,OAAA;IAAKgB,SAAS,EAAC,8DAA8D;IAAAC,QAAA,eAC3EjB,OAAA;MACEkB,GAAG,EAAEV,QAAS;MACdQ,SAAS,EAAC,4BAA4B;MACtCG,GAAG,EAAEJ,QAAS;MACdK,QAAQ;MACRC,KAAK;MACLC,WAAW;MACXC,OAAO,EAAET;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhDIF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}