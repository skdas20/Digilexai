{"ast":null,"code":"import axios from 'axios';\n\n// API Base URL\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000/api';\n\n// Helper function for making API requests\nconst apiRequest = async (endpoint, method = 'GET', data = null) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const options = {\n    method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include' // Include cookies for authentication\n  };\n  if (data) {\n    options.body = JSON.stringify(data);\n  }\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    return {\n      success: response.ok,\n      status: response.status,\n      data: result.data,\n      message: result.message || ''\n    };\n  } catch (error) {\n    console.error(`API Error (${method} ${endpoint}):`, error);\n    return {\n      success: false,\n      status: 0,\n      data: null,\n      message: error.message || 'Network error'\n    };\n  }\n};\n\n// Auth API\nexport const authAPI = {\n  // Register a new user\n  register: userData => apiRequest('/auth/register', 'POST', userData),\n  // Login user\n  login: credentials => apiRequest('/auth/login', 'POST', credentials),\n  // Logout user\n  logout: () => apiRequest('/auth/logout', 'POST'),\n  // Get current user\n  getCurrentUser: () => apiRequest('/auth/me')\n};\n\n// Document API\nexport const documentAPI = {\n  // Get all documents for the current user\n  getUserDocuments: () => apiRequest('/documents/user'),\n  // Get a specific document\n  getDocument: id => apiRequest(`/documents/${id}`),\n  // Generate a document\n  generateDocument: data => apiRequest('/documents/generate', 'POST', data),\n  // Save a document\n  saveDocument: data => apiRequest('/documents', 'POST', data),\n  // Update a document\n  updateDocument: (id, data) => apiRequest(`/documents/${id}`, 'PUT', data),\n  // Delete a document\n  deleteDocument: id => apiRequest(`/documents/${id}`, 'DELETE')\n};\n\n// DAO API\nexport const daoAPI = {\n  // Get all DAOs for the current user\n  getUserDAOs: () => apiRequest('/daos/user'),\n  // Get a specific DAO\n  getDAO: id => apiRequest(`/daos/${id}`),\n  // Create a new DAO\n  createDAO: data => apiRequest('/daos', 'POST', data),\n  // Get DAO proposals\n  getDAOProposals: daoId => apiRequest(`/daos/${daoId}/proposals`),\n  // Get DAO members\n  getDAOMembers: daoId => apiRequest(`/daos/${daoId}/members`),\n  // Create a proposal\n  createProposal: (daoId, data) => apiRequest(`/daos/${daoId}/proposals`, 'POST', data),\n  // Vote on a proposal\n  voteOnProposal: (daoId, proposalId, data) => apiRequest(`/daos/${daoId}/proposals/${proposalId}/vote`, 'POST', data)\n};\n\n// AI API\nexport const aiAPI = {\n  // Generate legal document\n  generateLegalDocument: data => apiRequest('/ai/generate-document', 'POST', data),\n  // Review smart contract\n  reviewSmartContract: data => apiRequest('/ai/review-contract', 'POST', data),\n  // Get legal advice\n  getLegalAdvice: query => apiRequest('/ai/legal-advice', 'POST', {\n    query\n  })\n};\n\n// Export all APIs\nexport default {\n  auth: authAPI,\n  document: documentAPI,\n  dao: daoAPI,\n  ai: aiAPI\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_BACKEND_URL","apiRequest","endpoint","method","data","url","options","headers","credentials","body","JSON","stringify","response","fetch","result","json","success","ok","status","message","error","console","authAPI","register","userData","login","logout","getCurrentUser","documentAPI","getUserDocuments","getDocument","id","generateDocument","saveDocument","updateDocument","deleteDocument","daoAPI","getUserDAOs","getDAO","createDAO","getDAOProposals","daoId","getDAOMembers","createProposal","voteOnProposal","proposalId","aiAPI","generateLegalDocument","reviewSmartContract","getLegalAdvice","query","auth","document","dao","ai"],"sources":["C:/Users/piyus/Downloads/legal/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API Base URL\r\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000/api';\r\n\r\n// Helper function for making API requests\r\nconst apiRequest = async (endpoint, method = 'GET', data = null) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  const options = {\r\n    method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'include', // Include cookies for authentication\r\n  };\r\n  \r\n  if (data) {\r\n    options.body = JSON.stringify(data);\r\n  }\r\n  \r\n  try {\r\n    const response = await fetch(url, options);\r\n    const result = await response.json();\r\n    \r\n    return {\r\n      success: response.ok,\r\n      status: response.status,\r\n      data: result.data,\r\n      message: result.message || '',\r\n    };\r\n  } catch (error) {\r\n    console.error(`API Error (${method} ${endpoint}):`, error);\r\n    \r\n    return {\r\n      success: false,\r\n      status: 0,\r\n      data: null,\r\n      message: error.message || 'Network error',\r\n    };\r\n  }\r\n};\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  // Register a new user\r\n  register: (userData) => apiRequest('/auth/register', 'POST', userData),\r\n  \r\n  // Login user\r\n  login: (credentials) => apiRequest('/auth/login', 'POST', credentials),\r\n  \r\n  // Logout user\r\n  logout: () => apiRequest('/auth/logout', 'POST'),\r\n  \r\n  // Get current user\r\n  getCurrentUser: () => apiRequest('/auth/me'),\r\n};\r\n\r\n// Document API\r\nexport const documentAPI = {\r\n  // Get all documents for the current user\r\n  getUserDocuments: () => apiRequest('/documents/user'),\r\n  \r\n  // Get a specific document\r\n  getDocument: (id) => apiRequest(`/documents/${id}`),\r\n  \r\n  // Generate a document\r\n  generateDocument: (data) => apiRequest('/documents/generate', 'POST', data),\r\n  \r\n  // Save a document\r\n  saveDocument: (data) => apiRequest('/documents', 'POST', data),\r\n  \r\n  // Update a document\r\n  updateDocument: (id, data) => apiRequest(`/documents/${id}`, 'PUT', data),\r\n  \r\n  // Delete a document\r\n  deleteDocument: (id) => apiRequest(`/documents/${id}`, 'DELETE'),\r\n};\r\n\r\n// DAO API\r\nexport const daoAPI = {\r\n  // Get all DAOs for the current user\r\n  getUserDAOs: () => apiRequest('/daos/user'),\r\n  \r\n  // Get a specific DAO\r\n  getDAO: (id) => apiRequest(`/daos/${id}`),\r\n  \r\n  // Create a new DAO\r\n  createDAO: (data) => apiRequest('/daos', 'POST', data),\r\n  \r\n  // Get DAO proposals\r\n  getDAOProposals: (daoId) => apiRequest(`/daos/${daoId}/proposals`),\r\n  \r\n  // Get DAO members\r\n  getDAOMembers: (daoId) => apiRequest(`/daos/${daoId}/members`),\r\n  \r\n  // Create a proposal\r\n  createProposal: (daoId, data) => apiRequest(`/daos/${daoId}/proposals`, 'POST', data),\r\n  \r\n  // Vote on a proposal\r\n  voteOnProposal: (daoId, proposalId, data) => apiRequest(`/daos/${daoId}/proposals/${proposalId}/vote`, 'POST', data),\r\n};\r\n\r\n// AI API\r\nexport const aiAPI = {\r\n  // Generate legal document\r\n  generateLegalDocument: (data) => apiRequest('/ai/generate-document', 'POST', data),\r\n  \r\n  // Review smart contract\r\n  reviewSmartContract: (data) => apiRequest('/ai/review-contract', 'POST', data),\r\n  \r\n  // Get legal advice\r\n  getLegalAdvice: (query) => apiRequest('/ai/legal-advice', 'POST', { query }),\r\n};\r\n\r\n// Export all APIs\r\nexport default {\r\n  auth: authAPI,\r\n  document: documentAPI,\r\n  dao: daoAPI,\r\n  ai: aiAPI,\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}