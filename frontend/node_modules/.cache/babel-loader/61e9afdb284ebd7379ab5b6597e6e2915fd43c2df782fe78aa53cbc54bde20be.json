{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piyus\\\\Downloads\\\\legal\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios defaults\n  axios.defaults.baseURL = 'http://localhost:5000/api';\n\n  // Set up axios interceptor for token\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    return () => axios.interceptors.request.eject(interceptor);\n  }, [token]);\n\n  // Load user on initial render if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const res = await axios.get('/auth/profile');\n          setUser(res.data);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error loading user:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, [token]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      const res = await axios.post('/auth/register', userData);\n      if (res.data.token) {\n        localStorage.setItem('token', res.data.token);\n        setToken(res.data.token);\n        setUser(res.data.user);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed'\n      };\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      if (res.data.token) {\n        localStorage.setItem('token', res.data.token);\n        setToken(res.data.token);\n        setUser(res.data.user);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed'\n      };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update wallet address\n  const updateWalletAddress = async walletAddress => {\n    try {\n      const res = await axios.put('/auth/wallet', {\n        walletAddress\n      });\n      setUser(res.data);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Update wallet address error:', error);\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to update wallet address'\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isAuthenticated,\n      loading,\n      register,\n      login,\n      logout,\n      updateWalletAddress\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"lBXWR7jsaIB9i7UhnXBHDOXGz4o=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","defaults","baseURL","interceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","eject","loadUser","res","get","data","console","removeItem","register","userData","post","setItem","success","_error$response","_error$response$data","message","response","login","email","password","_error$response2","_error$response2$data","logout","updateWalletAddress","walletAddress","put","_error$response3","_error$response3$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/piyus/Downloads/legal/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Set up axios defaults\r\n  axios.defaults.baseURL = 'http://localhost:5000/api';\r\n  \r\n  // Set up axios interceptor for token\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.request.use(\r\n      config => {\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      error => Promise.reject(error)\r\n    );\r\n    \r\n    return () => axios.interceptors.request.eject(interceptor);\r\n  }, [token]);\r\n  \r\n  // Load user on initial render if token exists\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (token) {\r\n        try {\r\n          const res = await axios.get('/auth/profile');\r\n          setUser(res.data);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          console.error('Error loading user:', error);\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n          setUser(null);\r\n          setIsAuthenticated(false);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    \r\n    loadUser();\r\n  }, [token]);\r\n  \r\n  // Register user\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await axios.post('/auth/register', userData);\r\n      \r\n      if (res.data.token) {\r\n        localStorage.setItem('token', res.data.token);\r\n        setToken(res.data.token);\r\n        setUser(res.data.user);\r\n        setIsAuthenticated(true);\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Registration failed' \r\n      };\r\n    }\r\n  };\r\n  \r\n  // Login user\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.post('/auth/login', { email, password });\r\n      \r\n      if (res.data.token) {\r\n        localStorage.setItem('token', res.data.token);\r\n        setToken(res.data.token);\r\n        setUser(res.data.user);\r\n        setIsAuthenticated(true);\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n  \r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n  \r\n  // Update wallet address\r\n  const updateWalletAddress = async (walletAddress) => {\r\n    try {\r\n      const res = await axios.put('/auth/wallet', { walletAddress });\r\n      setUser(res.data);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Update wallet address error:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Failed to update wallet address' \r\n      };\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        isAuthenticated,\r\n        loading,\r\n        register,\r\n        login,\r\n        logout,\r\n        updateWalletAddress\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}